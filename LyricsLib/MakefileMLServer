DIR_OBJ := obj

SRC =   LyricsKeywordFilter.cpp LrcTag.cpp

OBJ = $(SRC:%.cpp=${DIR_OBJ}/%.o)


OUT_LIB = ../MLServerNgx/lib/libmllib_mlserver.a

# Include directories
INCLUDES = -I./

# C++ compiler flags (-g -O2 -Wall)
CCFLAGS = -fPIC -W -Wall -pipe

CCFLAGS += -D_LINUX -DNO_LINUX_GTK2

debug: CCFLAGS += -g -DDEBUG
release: CCFLAGS += -O3 -DNDEBUG

# compiler
CC = gcc
CXX = g++

# compile flags
LDFLAGS = -lstdc++
# LDFLAGS += -lbsd

# C++ extra
CPPFLAGS = -std=c++11

# C extra
CFLAGS = -Wno-sequence-point -Wno-pointer-to-int-cast -Wno-unknown-pragmas

${DIR_OBJ}/%.o: %.cpp
	@echo Compiling $< ...
	@mkdir -p $(dir $@)
	$(CXX) $(INCLUDES) $(CCFLAGS) $(CPPFLAGS) -c $< -o $@
	@touch $@

${DIR_OBJ}/%.o: %.c
	@echo Compiling $< ...
	@mkdir -p $(dir $@)
	$(CC) $(INCLUDES) $(CCFLAGS) $(CFLAGS) -c $< -o $@
	@touch $@

.SUFFIXES: .cpp .c

.cpp.o:
	$(CXX) $(INCLUDES) $(CCFLAGS) -c $< -o $@

.c.o:
	$(CC) $(INCLUDES) $(CCFLAGS) -c $< -o $@

debug: build_lib
release: build_lib

build_lib: $(OBJ)
	ar rcs $(OUT_LIB) $(OBJ)

clean:
	rm -f -R $(OBJ) $(OUT_LIB)

